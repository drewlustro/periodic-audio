
=vendorize($property, $value)
  -webkit-#{$property}: $value
  -moz-#{$property}: $value
  -ms-#{$property}: $value
  -o-#{$property}: $value
  #{$property}: $value

=no-select
  -webkit-touch-callout: none
  +vendorize(user-select, none)

=no-outline
  +hover-active-focus
    outline: none
    -moz-outline-style: none

=transform-performant
  +vendorize(backface-visibility, hidden)
  +vendorize(perspective, 1000)

=no-text-size-adjust
  +vendorize(text-size-adjust, none)

=hover-active-focus
  &:hover,
  &:active
    @content

=hover-active
  &:hover,
  &:active
    @content

=a-link
  a,
  a:link,
  a:visited
    @content

=clearfix
  &:before, &:after
    content: " "
    display: table
  &:after
    clear: both

=block-center
  display: block
  margin-left: auto
  margin-right: auto

=list-reset
  list-style: none
  padding: 0
  margin: 0

=debug
  outline: 1px solid #c0392b !important
  z-index: 999999


=text-shadow-white($size: 1px, $opacity: 0.9)
  text-shadow: 0 $size 0 rgba(255, 255, 255, $opacity)

=text-shadow-black($size: 1px, $opacity: 0.8)
  text-shadow: 0 $size 0 rgba(0, 0, 0, $opacity)

=font-antialiased
  -webkit-font-smoothing: antialiased
  -moz-osx-font-smoothing: greyscale
  font-smoothing: antialiased

=font-subpixel
  webkit-font-smoothing: subpixel-antialiased
  -moz-osx-font-smoothing: auto
  font-smoothing: subpixel-antialiased

=text-tail-truncate($text-overflow: ellipsis, $single-line: false)
  text-overflow: #{$text-overflow}
  overflow: hidden
  @if $single-line
    white-space: nowrap
  @else
    white-space: normal

// Acknowledgements
// Beat *that* clearfix: [Thierry Koblentz](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php)


// Viewport sizing with % fallbacks for older browsers
=vwidth($width: 100)
  width: $width * 1%
  width: $width * 1vw

=vheight($height: 100)
  height: $height * 1%
  height: $height * 1vh

=vsize($size: 100)
  +vwidth($size)
  +vheight($size)

// [doc] Utility to simply strip units from any value. [/doc]
@function strip-unit($value)
  @return $value / ($value * 0 + 1)

// [doc] Rem with pixel fallback for font sizes. [/doc]
@mixin font-size($sizeValue: 14)
  $value: strip-unit($sizeValue)
  font-size: #{$value + px}
  font-size: #{($value / $base-font-size) + rem}

// [doc] Vertically center using line-height (not suitable for multiple lines of text). [/doc]
@mixin vertically-center($x: 20)
  $value: strip-unit($x)
  height: #{$value + px}
  line-height: #{$value + px}

// [doc] Style input placeholders (Pass in a content block). [/doc]
@mixin placeholder()
  &::-webkit-input-placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &:-ms-input-placeholder
    @content

// [doc] Create square dimenstions based on width, returns width & height. [/doc]
@mixin size($w, $h: $w)
  height: $h
  width: $w

// [doc] Gradient Background overlay (for images). [/doc]
@mixin image-overlay--gradient( $color-start: $darkgray, $opacity-start: 0.5, $color-end: #FFF, $opacity-end: 0, $start: 0, $stop: 35% )
  .enhanced &
    background: linear-gradient(to top, rgba($color-start, $opacity-start) $start, rgba($color-end, $opacity-end) $stop)

// [doc] Flat Background overlay (for images). 35% percent. [/doc]
@mixin image-overlay--flat( $percent: 0.35, $color: $darkgray )
  .enhanced &
    background-color: rgba($darkgray, $percent)

// [doc] A mixin to help clean up z-index madness. Options are: `below`, `default`, `middle`, `top`, and `modal` [/doc]
@mixin z-layer( $layer: default )
  @if $layer == below
    z-index: -1
  @else if $layer == default
    z-index: 1
  @else if $layer == middle
    z-index: 10
  @else if $layer == top
    z-index: 20
  @else if $layer == modal
    z-index: 9999
  @else
    z-index: 1




